version: '3.9'

services:
  shops_db:
    image: postgres:14
    container_name: shops_db
    env_file:
      - ./shops_service/.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - shops_net

  shops_redis:
    image: redis:6
    container_name: shops_redis
    env_file:
      - ./shops_service/.env
    ports:
      - "6379:6379"
    networks:
      - shops_net

  shops_celery:
    build:
      context: ./shops_service
    container_name: shops_celery
    env_file:
      - ./shops_service/.env
    depends_on:
      - shops_db
      - shops_redis
    networks:
      - shops_net
    command: celery -A shops_service worker --loglevel=info

  shops_web:
    build:
      context: ./shops_service
    container_name: shops_web
    env_file:
      - ./shops_service/.env
    depends_on:
      - shops_db
      - shops_redis
      - shops_celery
    ports:
      - "8000:8000"
    networks:
      - shops_net
    command: >
      sh -c "
      while ! nc -z shops_db 5432;
      do
        echo 'Waiting for Postgres...';
        sleep 1;
      done;
      echo 'Postgres is up - executing migrations';
      python manage.py migrate &&
      echo 'Starting Django server';
      python manage.py runserver 0.0.0.0:8000
      "

  user_db:
    image: postgres:14
    container_name: users_db
    env_file:
      - ./users_service/.env
    ports:
      - "5433:5432"   # Hostun 5433 -> konteynerin 5432 portu
    volumes:
      - user_postgres_data:/var/lib/postgresql/data
    networks:
      - shops_net
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "users_admin"]
      interval: 5s
      timeout: 5s
      retries: 5

  users_redis:
    image: redis:6
    container_name: users_redis
    env_file:
      - ./users_service/.env
    ports:
      - "6380:6379"
    networks:
      - shops_net

  user_service:
    build:
      context: ./users_service
    container_name: users_service
    env_file:
      - ./users_service/.env
    depends_on:
      user_db:
        condition: service_healthy
      users_redis:
        condition: service_started
    ports:
      - "8001:8001"
    networks:
      - shops_net
    command: >
      sh -c "
      while ! nc -z users_db 5432;
      do
        echo 'Waiting for Postgres...';
        sleep 1;
      done;
      echo 'Postgres is up - executing migrations';
      python manage.py migrate &&
      echo 'Starting Django server';
      python manage.py runserver 0.0.0.0:8001
      "

volumes:
  postgres_data:
  user_postgres_data:

networks:
  shops_net:
    driver: bridge