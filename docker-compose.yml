services:
  products-db:
    image: postgres:15
    container_name: products-db
    restart: always
    env_file:
      - ./products_service/.env    # products_db üçün də products_service içindəki .env istifadə olunur
    volumes:
      - postgres_products_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - backend

  products_service:
    build:
      context: ./products_service
    container_name: products_service
    env_file:
      - ./products_service/.env
    ports:
      - "8010:8000"
    depends_on:
      - products-db
      - redis
      - elasticsearch
    volumes:
      - ./products_service:/app
    networks:
      - backend

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - backend

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.9
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    networks:
      - backend

  celery_worker:
    build:
      context: ./products_service
    container_name: celery_worker
    command: celery -A products_service worker --loglevel=info
    env_file:
      - ./products_service/.env
    depends_on:
      - redis
      - products-db
    networks:
      - backend

  celery_beat:
    build:
      context: ./products_service
    container_name: celery_beat
    command: celery -A products_service beat --loglevel=info
    env_file:
      - ./products_service/.env
    depends_on:
      - redis
      - products-db
    networks:
      - backend

volumes:
  postgres_products_data:

networks:
  backend:
    driver: bridge
